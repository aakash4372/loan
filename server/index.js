require("dotenv").config();
const express = require("express");
const cors = require("cors");
const nodemailer = require("nodemailer");

const app = express();
const PORT = process.env.PORT || 5000;

// Middleware
app.use(cors({
  origin: "*",
  methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"],
  allowedHeaders: ["Content-Type", "Authorization"],
}));
app.use(express.json());

// Nodemailer transporter (Zoho)
const transporter = nodemailer.createTransport({
  host: "smtp.zoho.in", // use smtp.zoho.com if outside India
  port: 465,
  secure: true,
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

// Verify transporter
transporter.verify((error, success) => {
  if (error) {
    console.error("SMTP Connection Error:", error);
  } else {
    console.log("âœ… SMTP Server ready to send emails");
  }
});

// Root route
app.get("/", (req, res) => {
  res.send("ðŸš€ Enquiry Form Backend is live!");
});

// Send Email
app.post("/send-email", async (req, res) => {
  try {
    const { name, phone, email, address, message } = req.body;

    if (!name || !email || !message) {
      return res.status(400).json({ message: "Name, email, and message are required!" });
    }

    // Email to admin
    const ownerMailOptions = {
      from: process.env.EMAIL_USER,
      to: process.env.EMAIL_USER,
      subject: "ðŸ“© New Enquiry Form Submission",
      html: `
        <div style="font-family: Arial, sans-serif; padding: 20px; background: #f4f4f4;">
          <div style="max-width:600px; margin:auto; background:#fff; padding:20px; border-radius:8px;">
            <h2 style="color:#007bff;">ðŸ“© New Enquiry</h2>
            <p><strong>Name:</strong> ${name}</p>
            <p><strong>Email:</strong> ${email}</p>
            <p><strong>Phone:</strong> ${phone || "Not provided"}</p>
            <p><strong>Address:</strong> ${address || "Not provided"}</p>
            <p><strong>Message:</strong></p>
            <blockquote style="border-left:4px solid #007bff; padding-left:10px;">${message}</blockquote>
            <hr>
            <p style="font-size:12px; color:#555;">Automatically generated by your website</p>
          </div>
        </div>
      `
    };

    // Confirmation to user
    const userMailOptions = {
      from: process.env.EMAIL_USER,
      to: email,
      subject: "âœ¨ Thank You for Contacting Us",
      html: `
        <div style="font-family: Arial, sans-serif; padding: 20px; background: #f4f4f4;">
          <div style="max-width:600px; margin:auto; background:#fff; padding:20px; border-radius:8px;">
            <h2 style="color:#28a745;">âœ¨ Thank You!</h2>
            <p>Dear ${name},</p>
            <p>We have received your enquiry:</p>
            <blockquote style="border-left:4px solid #28a745; padding-left:10px;">${message}</blockquote>
            <p>We will get back to you shortly.</p>
            <hr>
            <p style="font-size:12px; color:#555;">Your website team</p>
          </div>
        </div>
      `
    };

    // Send emails
    await transporter.sendMail(ownerMailOptions);
    await transporter.sendMail(userMailOptions);

    res.status(200).json({ message: "Enquiry sent successfully!" });
  } catch (error) {
    console.error("Email Error:", error);
    res.status(500).json({ message: "Failed to send enquiry.", error: error.message });
  }
});

// Start server
app.listen(PORT, () => {
  console.log(`âœ… Server running on port:${PORT}`);
});
